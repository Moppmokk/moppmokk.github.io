{"ast":null,"code":"var _jsxFileName = \"/Users/moritz/jammming/src/Components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport logo from './logo.jpg';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResult from '../SearchResult/SearchResult';\nimport Playlist from '../Playlist/Playlist';\nimport Track from '../Track/Track';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // token\n\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n    if (!token && hash) {\n      token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n    }\n    setToken(token);\n  }, []);\n\n  // user\n\n  const [userId, setUserId] = useState(\"\");\n  const getUser = async e => {\n    const {\n      data\n    } = await axios.get(\"https://api.spotify.com/v1/me\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setUserId(data.id);\n  };\n\n  // search\n\n  const CLIENT_ID = 'da32ad9710d44c12ba2961fc6bda4dda';\n  const REDIRECT_URI = \"http://localhost:3000\";\n  const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\";\n  const RESPONSE_TYPE = \"token\";\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [tracks, setTracks] = useState([]);\n  const searchTracks = async e => {\n    const {\n      data\n    } = await axios.get(\"https://api.spotify.com/v1/search\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        q: searchKey,\n        type: \"track\"\n      }\n    });\n    setTracks(data.tracks.items);\n  };\n\n  // New Playlist\n\n  const [playlistName, setPlaylistName] = useState(\"Enter Playlist Name\");\n  const [toPlaylist, setToPlaylist] = useState([]);\n  const [trackIds, setTrackIds] = useState([]);\n  useEffect(() => {\n    if (!toPlaylist) {\n      setToPlaylist([]);\n    }\n    console.log(toPlaylist);\n  });\n\n  // save Playlist\n\n  let errorTracker = '';\n  const createPlaylist = async e => {\n    errorTracker = '';\n    try {\n      await getUser();\n      const response = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: playlistName,\n          public: true,\n          description: 'A playlist generated through Jammming Project by OldMo'\n        })\n      });\n      const jsonResponse = await response.json();\n      const playlistId = jsonResponse.id;\n      if (playlistId) {\n        const replacePlaylistTracksUrl = `https://api.spotify.com/v1/playlists/${playlistId}/tracks`;\n        await fetch(replacePlaylistTracksUrl, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            uris: toPlaylist.map(id => \"spotify:track:\".concat(id.id))\n          })\n        });\n      }\n    } catch (error) {\n      console.log('error', error);\n      errorTracker = error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jammming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}&scope=playlist-modify-public`,\n      children: \"Login to Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchKey: searchKey,\n        handleChange2: e => setSearchKey(e),\n        submitHandler: searchTracks,\n        searchTracks: searchTracks,\n        tracks: tracks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResult, {\n          searchResults: tracks,\n          onAdd: tr => toPlaylist.some(i => tr.searchResultObject === i) ? setToPlaylist(prev => {\n            return prev.filter(newTr => newTr !== tr.searchResultObject);\n          }) : setToPlaylist(prev => [tr.searchResultObject, ...prev]),\n          toPlaylist: toPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          toPlaylist: toPlaylist,\n          onAdd: tr => toPlaylist.some(i => tr.searchResultObject === i) ? setToPlaylist(prev => {\n            return prev.filter(newTr => newTr !== tr.searchResultObject);\n          }) : setToPlaylist(prev => [tr.searchResultObject, ...prev]),\n          changeName: name => setPlaylistName(name),\n          playlistName: playlistName,\n          getUser: () => getUser(),\n          createPlaylist: () => createPlaylist()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QXr0kVpU9vZsHd2NCBspqpWG/VU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","SearchBar","SearchResult","Playlist","Track","axios","jsxDEV","_jsxDEV","App","_s","token","setToken","hash","window","location","localStorage","getItem","substring","split","find","elem","startsWith","setItem","userId","setUserId","getUser","e","data","get","headers","Authorization","id","CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","RESPONSE_TYPE","searchKey","setSearchKey","tracks","setTracks","searchTracks","params","q","type","items","playlistName","setPlaylistName","toPlaylist","setToPlaylist","trackIds","setTrackIds","console","log","errorTracker","createPlaylist","response","fetch","method","body","JSON","stringify","name","public","description","jsonResponse","json","playlistId","replacePlaylistTracksUrl","uris","map","concat","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","handleChange2","submitHandler","searchResults","onAdd","tr","some","i","searchResultObject","prev","filter","newTr","changeName","_c","$RefreshReg$"],"sources":["/Users/moritz/jammming/src/Components/App/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.jpg';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResult from '../SearchResult/SearchResult';\nimport Playlist from '../Playlist/Playlist';\nimport Track from '../Track/Track';\nimport axios from 'axios';\n\nfunction App() {\n\n  // token\n\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    const hash = window.location.hash\n    let token = window.localStorage.getItem(\"token\")\n\n    if (!token && hash) {\n        token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1]\n\n        window.location.hash = \"\"\n        window.localStorage.setItem(\"token\", token)\n    }\n\n    setToken(token)\n  }, []) \n\n  // user\n\n  const [userId, setUserId] = useState(\"\");\n\n  const getUser = async (e) => {\n    const {data} = await axios.get(\"https://api.spotify.com/v1/me\", {\n        headers: {\n            Authorization: `Bearer ${token}`\n        },\n    })\n\n    setUserId(data.id);\n  }\n\n  // search\n\n  const CLIENT_ID = 'da32ad9710d44c12ba2961fc6bda4dda';\n  const REDIRECT_URI = \"http://localhost:3000\";\n  const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\";\n  const RESPONSE_TYPE = \"token\";\n\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [tracks, setTracks] = useState([]);\n\n  const searchTracks = async (e) => {\n    const {data} = await axios.get(\"https://api.spotify.com/v1/search\", {\n        headers: {\n            Authorization: `Bearer ${token}`\n        },\n        params: {\n            q: searchKey,\n            type: \"track\"\n        }\n    })\n\n    setTracks(data.tracks.items);\n  }\n\n  // New Playlist\n\n  const [playlistName, setPlaylistName] = useState(\"Enter Playlist Name\");\n\n  const [toPlaylist, setToPlaylist] = useState([]);\n  const [trackIds, setTrackIds] = useState([]);\n  useEffect(() => {\n    if (!toPlaylist) {\n      setToPlaylist([]);\n    }\n    console.log(toPlaylist);\n  })\n\n    // save Playlist\n\n    let errorTracker = '';\n\n    const createPlaylist = async (e) => { \n      errorTracker = '';\n      try {\n        await getUser();\n        const response = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n          method: 'POST',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: playlistName,\n            public: true,\n            description: 'A playlist generated through Jammming Project by OldMo'\n         })\n        })\n        const jsonResponse = await response.json();\n        const playlistId = jsonResponse.id;\n        if (playlistId) {\n          const replacePlaylistTracksUrl = `https://api.spotify.com/v1/playlists/${playlistId}/tracks`;\n          await fetch(replacePlaylistTracksUrl, {\n              method: 'PUT',\n              headers: {\n                  'Content-Type': 'application/json',\n                  Authorization: `Bearer ${token}`\n              },\n              body : JSON.stringify({uris: toPlaylist.map(id => \"spotify:track:\".concat(id.id))})\n          });\n        }\n      } catch (error) {\n        console.log('error', error);\n        errorTracker = error;\n      }\n\n    }\n\n  return (\n    <div className=\"App\">\n      <h1>Jammming</h1>\n      <div className=\"logo\"></div>\n      <a href={`${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}&scope=playlist-modify-public`}>Login to Spotify</a>\n      <div className=\"App\">\n        <SearchBar \n          searchKey={searchKey} \n          handleChange2={e => setSearchKey(e)} \n          submitHandler={searchTracks}\n          searchTracks={searchTracks}\n          tracks={tracks}\n        />\n        <div className=\"App-playlist\">\n          <SearchResult \n            searchResults={tracks} \n            onAdd={tr => toPlaylist.some((i) => tr.searchResultObject === i) ? setToPlaylist(prev => { return prev.filter(newTr => newTr !== tr.searchResultObject)}) : setToPlaylist(prev => [tr.searchResultObject, ...prev]) } \n            toPlaylist={toPlaylist}\n          />\n          <Playlist \n            toPlaylist={toPlaylist}\n            onAdd={tr => toPlaylist.some((i) => tr.searchResultObject === i) ? setToPlaylist(prev => { return prev.filter(newTr => newTr !== tr.searchResultObject)}) : setToPlaylist(prev => [tr.searchResultObject, ...prev]) } \n            changeName={name => setPlaylistName(name)}\n            playlistName={playlistName}\n            getUser={() => getUser()}\n            createPlaylist={() => createPlaylist()}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}