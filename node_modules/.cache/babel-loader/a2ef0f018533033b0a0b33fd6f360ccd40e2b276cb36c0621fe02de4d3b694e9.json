{"ast":null,"code":"var _jsxFileName = \"/Users/moritz/jammming/src/Components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport logo from './logo.jpg';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResult from '../SearchResult/SearchResult';\nimport Playlist from '../Playlist/Playlist';\nimport Track from '../Track/Track';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [name, setName] = useState('Example Name');\n  // const [artist, setArtist] = useState('Example Artist');\n  // const [album, setAlbum] = useState('Example Album');\n  // const [id, setId] = useState('Example ID');\n\n  // const getSearchResults = () => {\n  //   return (\n  //     {name, artist, album, id}\n  //   );\n  // }\n\n  const [searchResults, setSearchResults] = useState([{\n    name: 'Rocket Man',\n    artist: 'Elton John',\n    album: 'Honky Château',\n    id: 1\n  }, {\n    name: 'Space Oddity',\n    artist: 'David Bowie',\n    album: 'Space Oddity',\n    id: 2\n  }]);\n  const [toPlaylist, setToPlaylist] = useState([]);\n  useEffect(() => {\n    console.log(toPlaylist);\n    toPlaylist[0] ? console.log(toPlaylist[0].tr.searchResultObject) : console.log(`toPlaylist is empty.`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jammming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResult, {\n          searchResults: searchResults,\n          onAdd: tr => toPlaylist.includes(tr) ? setToPlaylist(prev => {\n            prev.filter(newTr => ({\n              newTr\n            }) !== {\n              tr\n            });\n          }) : setToPlaylist(prev => [{\n            tr\n          }, ...prev])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iJLCAZSVDL4hjwvXuiN1BynJxHM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","SearchBar","SearchResult","Playlist","Track","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","name","artist","album","id","toPlaylist","setToPlaylist","console","log","tr","searchResultObject","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","includes","prev","filter","newTr","_c","$RefreshReg$"],"sources":["/Users/moritz/jammming/src/Components/App/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.jpg';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResult from '../SearchResult/SearchResult';\nimport Playlist from '../Playlist/Playlist';\nimport Track from '../Track/Track';\n\n\nfunction App() {\n\n  // const [name, setName] = useState('Example Name');\n  // const [artist, setArtist] = useState('Example Artist');\n  // const [album, setAlbum] = useState('Example Album');\n  // const [id, setId] = useState('Example ID');\n\n  // const getSearchResults = () => {\n  //   return (\n  //     {name, artist, album, id}\n  //   );\n  // }\n\n  const [searchResults, setSearchResults] = useState([\n    { name: 'Rocket Man', artist: 'Elton John', album: 'Honky Château', id: 1 },\n    { name: 'Space Oddity', artist: 'David Bowie', album: 'Space Oddity', id: 2 }\n  ]);\n\n  const [toPlaylist, setToPlaylist] = useState([]);\n  useEffect(() => {\n    console.log(toPlaylist);\n    toPlaylist[0] ? console.log(toPlaylist[0].tr.searchResultObject) : console.log(`toPlaylist is empty.`);\n  })\n \n  return (\n    <div className=\"App\">\n      <h1>Jammming</h1>\n      <div className=\"logo\"></div>\n      <div className=\"App\">\n        <SearchBar />\n        <div className=\"App-playlist\">\n          <SearchResult searchResults={searchResults} onAdd={tr => toPlaylist.includes(tr) ? setToPlaylist(prev => {prev.filter(newTr => ({newTr}) !== ({tr}))}) : setToPlaylist(prev => [{ tr }, ...prev]) } />\n          <Playlist />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}